<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>str818's homepage</title>
    <description>Technology Blog</description>
    <link>http://localhost:5001</link>
    <atom:link href="http://localhost:5001/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>深度学习笔记</title>
        <description>&lt;p&gt;AI系统需要具备自己获取知识的能力，即从原始数据中提取模式的能力。这种能力被称为机器学习（machine learning)。&lt;/p&gt;

&lt;p&gt;深度学习（deep learning）通过其他较简单的标识来表达复杂表示，解决了表示学习中的核心问题。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;专利保护范围以权利要求书记载的内容为准，而不是由专利产品确定的&lt;/li&gt;
  &lt;li&gt;在上述前提下，允许利用说明书和附图对权利要求的保护范围作出一定的修正，这种修正是以专利权人对自己的发明创造作出具体说明为依据。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一项专利权的权利要求是由一个个具体的技术特征组成的。在一项发明专利中，其权利要求书中至少包含一项独立权利要求，还可以包括从属权利要求。由于独立权利要求是构成一项发明创造必不可少的必要技术特征组成的，
它的保护范围最大，所以&lt;strong&gt;专利权的保护范围首先是由独立权利要求确定的&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果缺少了某个技术特征时，会使方案不完整，或者行不通，那该技术特征就是&lt;strong&gt;必要技术特征&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;一般来说，在具体进行专利侵权判定时，应当结合以下几个主要原则加以运用：&lt;/p&gt;

&lt;h4 id=&quot;一-全面覆盖原则&quot;&gt;一 全面覆盖原则&lt;/h4&gt;
&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;p&gt;[1] &lt;a href=&quot;http://jekyllcn.com/&quot;&gt;Jekyll官方文档&lt;/a&gt;  &lt;br /&gt;
[2] &lt;a href=&quot;http://blog.csdn.net/itmyhome1990/article/details/50443826&quot;&gt;升级Jekyll 3.0&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Mar 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:5001//blog/Deep-Learning-Notes-1.html</link>
        <guid isPermaLink="true">http://localhost:5001//blog/Deep-Learning-Notes-1.html</guid>
      </item>
    
      <item>
        <title>专利侵权判定</title>
        <description>&lt;p&gt;发明或者实用新型专利权的保护范围以其权利要求的内容为准，说明书及附图可以用于解释权利要求。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;专利保护范围以权利要求书记载的内容为准，而不是由专利产品确定的&lt;/li&gt;
  &lt;li&gt;在上述前提下，允许利用说明书和附图对权利要求的保护范围作出一定的修正，这种修正是以专利权人对自己的发明创造作出具体说明为依据。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一项专利权的权利要求是由一个个具体的技术特征组成的。在一项发明专利中，其权利要求书中至少包含一项独立权利要求，还可以包括从属权利要求。由于独立权利要求是构成一项发明创造必不可少的必要技术特征组成的，
它的保护范围最大，所以&lt;strong&gt;专利权的保护范围首先是由独立权利要求确定的&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果缺少了某个技术特征时，会使方案不完整，或者行不通，那该技术特征就是&lt;strong&gt;必要技术特征&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;一般来说，在具体进行专利侵权判定时，应当结合以下几个主要原则加以运用：&lt;/p&gt;

&lt;h4 id=&quot;一-全面覆盖原则&quot;&gt;一 全面覆盖原则&lt;/h4&gt;
&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;p&gt;[1] &lt;a href=&quot;http://jekyllcn.com/&quot;&gt;Jekyll官方文档&lt;/a&gt;  &lt;br /&gt;
[2] &lt;a href=&quot;http://blog.csdn.net/itmyhome1990/article/details/50443826&quot;&gt;升级Jekyll 3.0&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Mar 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:5001//blog/patent-infringement-judgment.html</link>
        <guid isPermaLink="true">http://localhost:5001//blog/patent-infringement-judgment.html</guid>
      </item>
    
      <item>
        <title>Windows系统下安装Jekyll</title>
        <description>&lt;p&gt;　　Jekyll是一个简单的博客形态的静态站点生成机器，我们能通过Jekyll方便的搭建并维护一个博客。     &lt;br /&gt;
　　除此之外，Jekyll也可以运行在GitHub Page上，也就是说，你可以使用GitHub的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。&lt;/p&gt;

&lt;p&gt;　　下面来看一下如何在Windows系统下正确安装Jekyll：&lt;/p&gt;

&lt;h3 id=&quot;1安装ruby&quot;&gt;1.安装Ruby&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;下载链接&lt;/a&gt;    &lt;br /&gt;
版本的差异可能会出现一些不确定的问题，笔者在这方面吃过亏，这里建议下载2.3.3版本。
&lt;img src=&quot;\images\posts\2018\0301\RubyInstall.png&quot; alt=&quot;Ruby安装&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt;
	安装过程一路”Next”，需要注意记得勾选下图中的选项。
&lt;img src=&quot;\images\posts\2018\0301\RubyInstall_1.png&quot; alt=&quot;Ruby安装选项&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt;
	安装完成后输入”ruby -v”，显示版本号表明安装成功。
&lt;img src=&quot;\images\posts\2018\0301\RubyInstall_2.png&quot; alt=&quot;Ruby安装成功&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2安装devkit&quot;&gt;2.安装DevKit&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;下载链接&lt;/a&gt;，地址与Ruby下载地址相同，注意要安装与Ruby版本相对应的DevKit
&lt;img src=&quot;\images\posts\2018\0301\DevKitInstall.png&quot; alt=&quot;DevKit下载&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　　进入到DevKit的安装目录，在命令行窗口输入下列命令：  &lt;br /&gt;
　　&lt;code class=&quot;highlighter-rouge&quot;&gt;ruby dk.rb init&lt;/code&gt;  &lt;br /&gt;
　　&lt;code class=&quot;highlighter-rouge&quot;&gt;ruby dk.rb install&lt;/code&gt;  &lt;br /&gt;
&lt;img src=&quot;\images\posts\2018\0301\DevKitInstall_1.png&quot; alt=&quot;DevKit配置&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3安装jekyll&quot;&gt;3.安装Jekyll&lt;/h3&gt;
&lt;p&gt;首先检查是否安装gem:&lt;code class=&quot;highlighter-rouge&quot;&gt;gem -v&lt;/code&gt;，输入&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll&lt;/code&gt;安装Jekyll（科学上网）。&lt;/p&gt;

&lt;h3 id=&quot;4启动jekyll&quot;&gt;4.启动Jekyll&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new myblog&lt;/code&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;cd myblog&lt;/code&gt;  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;  &lt;br /&gt;
启动过程可能出现下图中的错误信息：
&lt;img src=&quot;\images\posts\2018\0301\JekyllError.png&quot; alt=&quot;Jekyll启动Error&quot; /&gt;
这是由于Jekyll启动需要的默认端口4000已被占用，只需要打开_config.yml 在最后加上一行 port:5002 (其它端口也可)问题解决&lt;/p&gt;

&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;p&gt;[1] &lt;a href=&quot;http://jekyllcn.com/&quot;&gt;Jekyll官方文档&lt;/a&gt;  &lt;br /&gt;
[2] &lt;a href=&quot;http://blog.csdn.net/itmyhome1990/article/details/50443826&quot;&gt;升级Jekyll 3.0&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Mar 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:5001//blog/jekyll-install.html</link>
        <guid isPermaLink="true">http://localhost:5001//blog/jekyll-install.html</guid>
      </item>
    
      <item>
        <title>MarkDown编写小技巧</title>
        <description>&lt;p&gt;　　MarkDown的详细使用方法可参考&lt;a href=&quot;https://www.appinn.com/markdown/&quot;&gt;这里&lt;/a&gt;，下面是几个常用的小技巧。&lt;/p&gt;
&lt;h3 id=&quot;1换行&quot;&gt;1.换行&lt;/h3&gt;
&lt;p&gt;　　在行尾敲两个以上的空格，然后回车&lt;/p&gt;

&lt;h3 id=&quot;2首行缩进&quot;&gt;2.首行缩进&lt;/h3&gt;
&lt;p&gt;　　MarkDown是不支持缩进的，将输入法切换为全角，敲两个空格，简单美观&lt;/p&gt;

&lt;h3 id=&quot;3图片缩放&quot;&gt;3.图片缩放&lt;/h3&gt;
&lt;p&gt;　　![描述](url){:height=”70%” width=”70%”}&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Feb 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:5001//blog/markdown.html</link>
        <guid isPermaLink="true">http://localhost:5001//blog/markdown.html</guid>
      </item>
    
      <item>
        <title>计算着色器（Compute Shader）</title>
        <description>&lt;p&gt;　　图形处理器（Graphics Processing Unit,简称GPU）每秒能够进行数以亿次的计算，目前其已成为一种性能十分惊人的器件。通常，GPU主要用来承担实时图形渲染中的海量数学运算，然而，其潜在的计算能力也可用于处理与图形无关的任务。 &lt;br /&gt;
　　CUDA与OpenCL早已能够基于GPU实现并行计算，而OpenGL与DirectX也分别于OpenGL4.3与DirectX11版本后能够通过计算着色器的方式基于GPU实现并行计算。从图中可以看到，计算着色器是独立与通常的渲染管线的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CUDA：NVIDIA推出的通用并行计算架构，该架构能够使用GPU解决复杂的计算问题。  &lt;br /&gt;
OpenCL：针对异构系统进行并行编程的一个全新API，能够利用GPU进行并行计算。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;\images\posts\2018\0228\pipeline.png&quot; alt=&quot;渲染管线&quot; height=&quot;70%&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-cpu与gpu&quot;&gt;1. CPU与GPU&lt;/h2&gt;
&lt;p&gt;　　前面提到了计算着色器能够基于GPU实现并行计算，从而提升计算能力，那么GPU到底独特在哪呢？为什么又比CPU的计算速度还要快？  &lt;br /&gt;
　　理解CPU与GPU之间区别的一种简单方式是比较他们是如果处理任务的：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt; 由专为顺序串行处理而优化的几个核心组成，其需要很强的通用性来处理各种不同的数据类型，除此之外逻辑判断会引入大量的分支跳转和中断处理，使得CPU的内部结构异常复杂。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GPU&lt;/strong&gt; 拥有一个由数以千计的更小、更高效的核心（专为同时处理多重任务而设计）组成的大规模并行计算架构。
&lt;img src=&quot;\images\posts\2018\0228\compare.jpg&quot; alt=&quot;CPU与GPU结构对比图&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt; 
　　其中，绿色是计算单元，橙红色是存储单元，橙黄色是控制单元。 &lt;br /&gt;
　　GPU采用了数量众多的计算单元和超长的流水线，但只有非常简单的逻辑控制并省去了Cache；而CPU不仅被Cache占据了大量空间，还有很复杂的控制逻辑和诸多优化电路，相比之下计算能力只是GPU很小的一部分。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 28 Feb 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:5001//blog/first-blog.html</link>
        <guid isPermaLink="true">http://localhost:5001//blog/first-blog.html</guid>
      </item>
    
  </channel>
</rss>
